@charset "utf-8";

// ex
// @mixin mixin-ex () {
//   @content;
// }
// .ex{
//   @include mixin-ex() {
//     // @content; 속성 삽입
//     background:#f0f0f0;
//   };
// }

// background-image
$path-images : "../images/";
@mixin back-img($file, $size: contain, $path : $path-images) {
  background-image: url("#{$path-images}#{$file}");
  background-size: $size;
}
// alt
// @mixin background($url, $x, $y, $width, $height) {
//   background-image: url($url);
//   background-position: ($x) ($y);
//   background-size: $width $height;
// }

// size
@mixin size($w, $h: $w) {
  width: $w;
  height: $h;
}

// image replacement
@mixin ir($width: 0) {
  border: $width;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

// ellipsis
@mixin ellipsis($line: 1) {
  overflow: hidden;
  display: -webkit-box;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
}
// @mixin ellipsis($line: 1) {
//   @if ($line == 1) {
//     overflow: hidden;
//     text-overflow: ellipsis;
//     white-space: nowrap;
//   } @else {
//     overflow: hidden;
//     display: -webkit-box;
//     text-overflow: ellipsis;
//     -webkit-box-orient: vertical;
//     -webkit-line-clamp: $line;
//   }
// }

// position
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// vs-b
@mixin vs-b {
  display: block;
  content: "";
}

// vs-ib
@mixin vs-ib {
  display: inline-block;
  content: "";
}

// 스크롤바 삭제
@mixin scroll-hide {
  &::-webkit-scrollbar {
    display: none;
  }
}












//focus color
@mixin focus($offset: -.4rem, $color: #246BEB, $alpha: .8) {
	//border-radius: inherit;
	// outline-offset: $offset;
	// $transparent: 1 - $alpha;
	// $focus-color: transparentize($color, $transparent);
	// outline: 2px solid $focus-color;
}

// /* One value, unitless number: flex-grow */
// flex: 2;

// /* One value, length or percentage: flex-basis */
// flex: 10em;
// flex: 30%;

// /* Two values: flex-grow | flex-basis */
// flex: 1 30px;

// /* Two values: flex-grow | flex-shrink */
// flex: 2 2;

// /* Three values: flex-grow | flex-shrink | flex-basis */
// flex: 2 2 10%;

//flex layout
@mixin flex-layout($d: flex, $ai: flex-start, $jc: flex-start, $fd: row) {
	display: $d;
	align-items: $ai;
	justify-content: $jc;
	flex-direction: $fd;
}

//group contents
@mixin group-wrap() {
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
	position: relative;
	width: 100%;
}
@mixin group() {
	flex: 1 1 auto;
	position: relative;
	width: 1%;
	min-width: 0;
}

// flex-center
@mixin flex-center {
  display: flex;
  align-items: center;
}

//가로 가운데 정렬
@mixin posX {
  position: absolute !important;
  left: 50% !important;
  transform: translateX(-50%) !important;
  margin-left: 0 !important;
}
//세로 중앙 정렬
@mixin posY {
  position: absolute !important;
  top: 50% !important;
  transform: translateY(-50%) !important;
  margin-top: 0 !important;
}
//가로 세로 가운데로
@mixin posXY {
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  margin: 0 !important;
}
//position 중앙 정렬
@mixin position-center($type) {
	@each $type in $position-type {
		//좌우중앙
		@if ($type == 'x') {
			left: 50%;
			transform: translateX(-50%)
		}
			//상하중앙
		@else if ($type == 'y') {
			top: 50%;
			transform: translateY(-50%);
		}
			//상하좌우중앙
		@else if ($type == 'both') {
			left: 50%;
			top: 50%;
			transform: translateX(-50%) translateY(-50%);
		}
	}
}


// make-arrow
@mixin make-arrow($w: 0.12rem, $pl: 0, $pt: $pl, $line: 1px, $color: #959595, $deg: -45) {
  position: relative;
  &::after {
    position: absolute;
    top: $pt;
    left: $pl;
    content: "";
    @include size($w, $h: $w);
    border-top: $line solid $color;
    border-left: $line solid $color;
    transform: rotate($deg + deg);
  }
}

// make-x
@mixin make-x($w: 0.26rem, $line: 1px, $color: #717171) {
  position: relative;
  @include size($w, $h: $w);
  &::before,
  &::after {
    display: block;
    content: "";
    position: absolute;
    left: $w / 2;
    height: 100%;
    width: $line;
    background-color: $color;
  }
  &::before {
    transform: rotate(45deg);
  }
  &::after {
    transform: rotate(-45deg);
  }
}

// 라디오,체크박스 리셋
@mixin check-reset {
  display: block;
  input[type="checkbox"],
  input[type="radio"] {
    display: none;
  }
  input + label {
    background: none;
    line-height: normal;
    min-height: unset;
    width: auto !important;
    padding: 0;
    @include flex-center;
  }
  input:checked + label {
    background: none;
  }
}

// 미디어 쿼리 
$devices: (
  mobile: 320px,
  tablet: 768px,
  desktop: 1280px
);
  
@mixin mq($device) {
  @if map-has-key($devices, $device) {
    $device-width: map-get($devices, $device);
    @media screen and (min-width: #{$device-width}) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$device}.";
  }
}

// @mixin@  mediaQuery 디바이스별 적용 @mixin@
@mixin mobile {
  @media screen and (max-width: 768px) {
    @content;
  }
}
@mixin tablet {
  @media screen and (min-width: 768px) and (max-width: 1024px) {
    @content;
  }
}
@mixin desktop {
  @media screen and (min-width: 1024px) {
    @content;
  }
}









// @mixin@  margin padding 등 size별로 미리세팅 @mixin@
// 기본폰트 12px 로 진행 추가되는 폰트개수만큼 증감숫자를 넣어주면된다.
$font-base: 12;
@mixin fontSizeCreate($length: 0) {
  @for $i from 0 through $length {
    .font-#{$i + $font-base} {
      font-size: $font-base + $i + px;
    }
  }
}
// @include fontSizeCreate(50);

// @mixin@ width size 타입 @mixin@
$widthSize: 10;
@mixin widthType($length: 0) {
  @for $i from 0 through $length {
    .w-#{$i*$widthSize} {
      width: $widthSize * $i + px !important;
    }
  }
}
// @include widthType(50);

$heightSize: 10;
@mixin HeightType($length: 0) {
  @for $i from 0 through $length {
    .h-#{$i*$heightSize} {
      height: $heightSize * $i + px !important;
    }
  }
}
// @include HeightType(20);

@mixin styleNone($propStyle) {
  &:last-child {
    #{$propStyle}: none;
  }
}

// @mixin@  margin padding 등 size별로 미리세팅 @mixin@
$sizes: 0, 5, 10, 15, 20, 25, 30, 35, 40, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100;
@mixin space($value: "margin", $name: "all", $dir: "left", $dir2: "top", $multi: 1) {
  $valueName: "";
  @if $value == margin {
    $valueName: "m";
  } @else if $value == padding {
    $valueName: "p";
  }
  @each $size in $sizes {
    @if $name == all {
      .#{$valueName}-#{$size} {
        #{$value}: $size + px !important;
      }
    } @else {
      .#{$valueName}-#{$name}-#{$size} {
        #{$value}-#{$dir}: $size + px !important;
        @if $multi > 1 {
          #{$value}-#{$dir2}: $size + px !important;
        }
      }
    }
  }
}
// single
// @include space("margin", "t", "top", 1);
// @include space("margin", "b", "bottom", 1);
// @include space("margin", "l", "left", 1);
// @include space("margin", "r", "right", 1);
// @include space("padding", "t", "top", 1);
// @include space("padding", "b", "bottom", 1);
// @include space("padding", "l", "left", 1);
// @include space("padding", "r", "right", 1);
// // double
// @include space("margin", "tb", "top", "bottom", 2);
// @include space("margin", "lr", "left", "right", 2);
// @include space("padding", "tb", "top", "bottom", 2);
// @include space("padding", "lr", "left", "right", 2);
// //all
// @include space("margin");
// @include space("padding");

@mixin prefix($property, $value) {
  $prefixes: webkit, moz, ms, o;
  @each $prefix in $prefixes {
    #{"-" + $prefix + "-" + $property}: $value;
  }
  // 기본
  #{$property}: $value;
}
@mixin transition($prop: all, $duration: 0.5s, $timing: ease, $delay: 0) {
  transition: $prop $duration $timing $delay;
}

@mixin notoFont($weight: light, $color: #000) {
  @if $weight==bold {
    font-family: "NotoSansKR-Bold";
    color: $color;
  } @else if $weight==light {
    font-family: "NotoSansKR-Light";
    color: $color;
  } @else if $weight==medium {
    font-family: "NotoSansKR-Medium";
    color: $color;
  } @else if $weight==thin {
    font-family: "NotoSansKR-Thin";
    color: $color;
  } @else if $weight==regular {
    font-family: "NotoSansKR-Regular";
    color: $color;
  } @else if $weight==black {
    font-family: "NotoSansKR-Black";
    color: $color;
  } @else if $weight==demilight {
    font-family: "NotoSansKR-DemiLight";
    color: $color;
  }
}
@mixin jungFont($weight: 110, $color: #000) {
  @if $weight==110 {
    font-family: "jung-110";
    color: $color;
  } @else if $weight==120 {
    font-family: "jung-120";
    color: $color;
  } @else if $weight==130 {
    font-family: "jung-130";
    color: $color;
  } @else if $weight==140 {
    font-family: "jung-140";
    color: $color;
  } @else if $weight==150 {
    font-family: "jung-150";
    color: $color;
  } @else if $weight==160 {
    font-family: "jung-160";
    color: $color;
  } @else if $weight==170 {
    font-family: "jung-170";
    color: $color;
  }
}
@mixin robotoFont($weight: regular, $color: #000) {
  @if $weight==bold {
    font-family: "Roboto-Bold";
    color: $color;
  } @else if $weight==italic {
    font-family: "Roboto-Italic";
    color: $color;
  } @else if $weight==light {
    font-family: "Roboto-Light";
    color: $color;
  } @else if $weight==medium {
    font-family: "Roboto-Medium";
    color: $color;
  } @else if $weight==regular {
    font-family: "Roboto-Regular";
    color: $color;
  } @else if $weight==thin {
    font-family: "Roboto-Thin";
    color: $color;
  }
}



// animation
@mixin rotateAnimate($deg, $time, $delay) {
  transition: all $time ease $delay;
  transform: rotate($deg);
}


// bg_name : 이미지.jpg 또는 .png ,$btnPositionX : 백그라운드 가로 포지션 , $btnPositionY : 백그라운드 세로 포지션
// $bgColor : null - > 기본 배경색 없음, 필요 시 입력 . 예) #fff
@mixin babyBackground($bg_name, $btnPositionX: 0, $btnPositionY: 0, $bgColor: null) {
  background: url("http://cdn.boribori.co.kr/Images_Web/2021/20211213_br_SookSookDay39451/" + $bg_name) $bgColor;
  background-position: $btnPositionX $btnPositionY;
  background-repeat: no-repeat;
}


// @mixin mobile {
// 	@media (max-width: $breakpoint-sm - 1px) {
// 		@content;
// 	}
// }
// @mixin mobileMore {
// 	@media (min-width: $breakpoint-sm) {
// 		@content;
// 	}
// }

// @mixin tablet {
// 	@media (min-width: $breakpoint-sm) and (max-width: $breakpoint-md - 1px) {
// 		@content;
// 	}
// }

// //tablet size 이하
// @mixin tabletLess { //
// 	@media (max-width: $breakpoint-md - 1px) {
// 		@content;
// 	}
// }

// //tablet size 이상
// @mixin tabletMore { //
// 	@media (min-width: $breakpoint-md) {
// 		@content;
// 	}
// }

// @mixin desktop {
// 	@media (min-width: $breakpoint-lg) {
// 		@content;
// 	}
// }