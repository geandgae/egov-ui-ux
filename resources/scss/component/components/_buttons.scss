/*** BUTTON COMPONENT ***/
//** component variables **
//* 버튼 사이즈 정의 *
$button-size: (
	xsmall: (
		height: map-get($spacings-size-height, 32),
		padding-x: map-get($spacings-padding, 10),
		gap: map-get($spacings-gap, 2),
		radius: map-get($radius, small-3),
		font-size-pc: map-get(map-get($typo-sizes-pc, label), small),
		font-size-mobile: map-get(map-get($typo-sizes-mobile, label), small),
		font-weight: map-get($typo-weights, regular),
	),
	small: (
		height: map-get($spacings-size-height, 40),
		padding-x: map-get($spacings-padding, 12),
		gap: map-get($spacings-gap, 2),
		radius: map-get($radius, medium-1),
		font-size-pc: map-get(map-get($typo-sizes-pc, label), small),
		font-size-mobile: map-get(map-get($typo-sizes-mobile, label), small),
		font-weight: map-get($typo-weights, regular),
	),
	medium: (
		height: map-get($spacings-size-height, 48),
		padding-x: map-get($spacings-padding, 16),
		gap: map-get($spacings-gap, 4),
		radius: map-get($radius, medium-2),
		font-size-pc: map-get(map-get($typo-sizes-pc, label), medium),
		font-size-mobile: map-get(map-get($typo-sizes-mobile, label), medium),
		font-weight: map-get($typo-weights, regular),
	),
	large: (
		height: map-get($spacings-size-height, 56),
		padding-x: map-get($spacings-padding, 20),
		gap: map-get($spacings-gap, 4),
		radius: map-get($radius, medium-3),
		font-size-pc: map-get(map-get($typo-sizes-pc, label), large),
		font-size-mobile: map-get(map-get($typo-sizes-mobile, label), large),
		font-weight: map-get($typo-weights, regular),
	),
	xlarge: (
		height: map-get($spacings-size-height, 64),
		padding-x: map-get($spacings-padding, 24),
		gap: map-get($spacings-gap, 4),
		radius: map-get($radius, medium-4),
		font-size-pc: map-get(map-get($typo-sizes-pc, label), large),
		font-size-mobile: map-get(map-get($typo-sizes-mobile, label), large),
		font-weight: map-get($typo-weights, regular),
	),
) !default;

//* 버튼 컬러 정의 *
$button-color: (
	primary: (
		background: map-get(map-get(map-get($colors-button, primary), background), default),
		background-hover: map-get(map-get(map-get($colors-button, primary), background), hover),
		background-pressed: map-get(map-get(map-get($colors-button, primary), background), pressed),
		background-disabled: map-get(map-get(map-get($colors-button, disabled), background), default),
		border: map-get(map-get($colors-button, primary), border),
		border-disabled: map-get(map-get($colors-button, disabled), border),
		text: map-get(map-get($colors-button, primary), text),
		text-disabled: map-get(map-get($colors-text, disabled), text),
	),
	secondary: (
		background: map-get(map-get(map-get($colors-button, secondary), background), default),
		background-hover: map-get(map-get(map-get($colors-button, secondary), background), hover),
		background-pressed: map-get(map-get(map-get($colors-button, secondary), background), pressed),
		background-disabled: map-get(map-get(map-get($colors-button, disabled), background), default),
		border: map-get(map-get($colors-button, secondary), border),
		border-disabled: map-get(map-get($colors-button, disabled), border),
		text: map-get(map-get($colors-button, secondary), text),
		text-disabled: map-get(map-get($colors-text, disabled), text),
	),
	tertiary: (
		background: map-get(map-get(map-get($colors-button, tertiary), background), default),
		background-hover: map-get(map-get(map-get($colors-button, tertiary), background), hover),
		background-pressed: map-get(map-get(map-get($colors-button, tertiary), background), pressed),
		background-disabled: map-get(map-get(map-get($colors-button, disabled), background), default),
		border: map-get(map-get($colors-button, tertiary), border),
		border-disabled: map-get(map-get($colors-button, disabled), border),
		text: map-get(map-get($colors-button, tertiary), text),
		text-disabled: map-get(map-get($colors-text, disabled), text),
	),
	text: (
		background: map-get(map-get(map-get($colors-button, text), background), default),
		background-hover: map-get(map-get(map-get($colors-button, text), background), hover),
		background-pressed: map-get(map-get(map-get($colors-button, text), background), pressed),
		background-disabled: map-get(map-get(map-get($colors-button, disabled), background), default),
		border: map-get(map-get($colors-button, text), border),
		border-disabled: map-get(map-get($colors-button, disabled), border),
		text: map-get(map-get($colors-button, text), text),
		text-disabled: map-get(map-get($colors-text, disabled), text),
	),
) !default;

//btn reset
@mixin btn-reset {
	color: inherit;
	border: 0;
	background-color: inherit;
	&:hover,
	&:active {
		background-color: inherit;
	}
}


//추후삭제
.btn {
	//default : primary color height lg
	$size: lg;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	gap: .4rem;
	width: auto;
	height: var(--#{$prefix}btn-h-#{$size});
	padding: 0 var(--#{$prefix}btn-px-#{$size});
	background-color: var(--#{$prefix}primary);
	border: 1px solid var(--#{$prefix}primary);
	border-radius: var(--#{$prefix}btn-rd-#{$size});
	font-size: var(--#{$prefix}fz-body-#{$size});
	color: var(--#{$prefix}white);
	font-weight: map-get($fws, normal);
	line-height: 1;
	cursor: pointer;
	white-space: nowrap;
	transition: $transition-base;
	&:hover {
		background-color: var(--#{$prefix}primary-60);
		border-color: var(--#{$prefix}primary-60);
	}
	&:active {
		background-color: var(--#{$prefix}primary-70);
		border-color: var(--#{$prefix}primary-70);
	}
	&:focus {
		@include focus($color: $white, $alpha: 0.9);
		transition: none;
	}
	&[disabled] {
		background-color: var(--#{$prefix}gray-30);
		border-color: var(--#{$prefix}gray-30);
		color: var(--#{$prefix}gray-60);
		cursor: default;
	}

	//color
	&.primary {
		background-color: var(--#{$prefix}primary);
		border: 1px solid var(--#{$prefix}primary);
		color: var(--#{$prefix}white);
		&:hover {
			background-color: var(--#{$prefix}primary-60);
			border-color: var(--#{$prefix}primary-60);
		}
		&:active {
			background-color: var(--#{$prefix}primary-70);
			border-color: var(--#{$prefix}primary-70);
		}
		&[disabled] {
			background-color: var(--#{$prefix}gray-30);
			border-color: var(--#{$prefix}gray-30);
			color: var(--#{$prefix}gray-60);
		}
	}
	&.secondary {
		background-color: var(--#{$prefix}white);
		border: 1px solid var(--#{$prefix}primary);
		color: $primary-60;
		&:hover {
			background-color: var(--#{$prefix}primary-5);
		}
		&:active {
			background-color: var(--#{$prefix}primary-10);
		}
		&:focus {
			@include focus($color: $primary);
		}
		&[disabled] {
			background-color: var(--#{$prefix}gray-30);
			border-color: var(--#{$prefix}gray-40);
			color: var(--#{$prefix}gray-60);
		}
		&.ico-arr-down {
			&::after {
				background-image: url(#{$url}/component/common/ico_arr_20_down_blue.svg);
				background-size: contain;
				background-position: center;
			}
		}
		&.active {
			&.ico-arr-down {
				&::after {
					transform: rotate(180deg);
				}
			}
		}
	}
	&.tertiary {
		background-color: var(--#{$prefix}white);
		border: 1px solid var(--#{$prefix}gray-90);
		color: var(--#{$prefix}secondary-90);
		&:hover {
			background-color: var(--#{$prefix}gray-5);
		}
		&:active {
			background-color: var(--#{$prefix}gray-10);
		}
		&:focus {
			@include focus($color: $primary);
		}
		&[disabled] {
			background-color: var(--#{$prefix}gray-30);
			border-color: var(--#{$prefix}gray-40);
			color: var(--#{$prefix}gray-60);
		}
	}

	//txt + ico
	&[class *= ico-] {
		&::after {
			display: inline-flex;
			content:'';
			width: 2.4rem;
			height: 2.4rem;
			background-repeat: no-repeat;
			background-size: contain;
		}
		&.ico-before {
			&::before {
				display: inline-flex;
				content:'';
				width: 2.4rem;
				height: 2.4rem;
				background-repeat: no-repeat;
				background-size: contain;
				background-position: center;
			}
			&::after {
				display: none;
			}
		}
	}
	&.ico-sch {
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_sch_20_wh.svg);
		}
	}
	&.ico-arr {
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_arr_20_right.svg);
		}
	}
	&.ico-upload {
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_upload_20_wh.svg);
		}
	}
	&.xsm {
		&[class *= ico-] {
			&::after {
				width: 1.6rem;
				height: 1.6rem;
			}
		}
	}
	&.sm &[class *= ico-] {
		&::after {
			width: 2rem;
			height: 2rem;
		}
	} 
}
//추후삭제


//사이즈별 variable
@mixin btn-size($unit) {
	//unit value: xsmall small medium larger xlarge
	gap: var(--#{$prefix}btn-gap-#{$unit});
	height: var(--#{$prefix}btn-height-#{$unit});
	padding: 0 var(--#{$prefix}btn-padding-x-#{$unit});
	border-radius: var(--#{$prefix}btn-radius-#{$unit});
	font-size: var(--#{$prefix}btn-font-size-pc-#{$unit});
	font-weight: var(--#{$prefix}btn-font-weight-#{$unit});
}

//컬러별 variable
@mixin btn-color($variant) {
	background-color: var(--#{$prefix}btn-#{$variant}-background);
	border: 1px solid var(--#{$prefix}btn-#{$variant}-border);
	color: var(--#{$prefix}btn-#{$variant}-text);
}
@mixin btn-color-hover($variant) {
	background-color: var(--#{$prefix}btn-#{$variant}-background-hover);
}
@mixin btn-color-pressed($variant) {
	background-color: var(--#{$prefix}btn-#{$variant}-background-pressed);
}
@mixin btn-color-disabled($variant) {
	background-color: var(--#{$prefix}btn-#{$variant}-background-disabled);
	border-color: var(--#{$prefix}btn-#{$variant}-border-disabled);
	color: var(--#{$prefix}btn-#{$variant}-text-disabled);
}
@mixin btn-color-icon($variant) {
	background-color: var(--#{$prefix}btn-#{$variant}-text);
}



.#{$prefix}btn {
	@each $size, $types in $button-size {
		@each $type, $value in $types {
			//css variable 생성
			--#{$prefix}btn-#{$type}-#{$size}: #{$value};
		}

		//사이즈 별 class
		&.#{$size} {
			@include btn-size(#{$size});
			//icon size
			.svg-icon {
				@include foursquare(var(--#{$prefix}icon-size-#{$size}));
			}
		}
	}
	@each $color, $status in $button-color {
		@each $type, $value in $status {
			//css variable 생성
			--#{$prefix}btn-#{$color}-#{$type}: #{$value};
		}
		//컬러 별 class
		&.#{$color} {
			@include btn-color(#{$color});
			&:not(.icon) {
				.svg-icon {
					@include btn-color-icon(#{$color});
				}
			}

			@if ($color == 'text') {
				@include btn-reset;
			}

			&:hover {
				@include btn-color-hover(#{$color});
			}
			&:active,
			&:focus {
				@include btn-color-pressed(#{$color});
			}

			//focus color
			@if ($color == 'primary') {
				&:focus {
					@include focus($color: $white, $alpha: 0.9);
				}
			}
			@else {
				&:focus {
					@include focus($color: $primary);
				}
			}

			&[disabled],
			.disabled {
				@include btn-color-disabled(#{$color});
			}
		}
	}

	//기본버튼: primary large
	@include flex-layout($d: inline-flex, $ai: center, $jc: center);
	width: auto;
	@include btn-size(large);
	@include btn-color(primary);
	cursor: pointer;
	white-space: nowrap;
	transition: $transition-base;
	.svg-icon {
		@include btn-color-icon(primary);
	}
	&:hover {
		@include btn-color-hover(primary);
	}
	&:active,
	&:focus {
		@include btn-color-pressed(primary);
	}
	&:focus {
		@include focus($color: $white, $alpha: 0.9);
		transition: none;
	}
	&[disabled],
	&.disabled {
		@include btn-color-disabled(primary);
		cursor: default;
	}

	//color
	&.secondary {
		//추후삭제
		//&.ico-arr-down {
		//	&::after {
		//		background-image: url(#{$url}/component/common/ico_arr_20_down_blue.svg);
		//		background-size: contain;
		//		background-position: center;
		//	}
		//}
		&.active {
			&.ico-arr-down {
				&::after {
					transform: rotate(180deg);
				}
			}
		}
	}

	//txt + ico
	&[class *= ico-] {
		//추후삭제
		//&::after {
		//	display: inline-flex;
		//	content:'';
		//	width: 2.4rem;
		//	height: 2.4rem;
		//	background-repeat: no-repeat;
		//	background-size: contain;
		//}
		//&.ico-before {
		//	&::before {
		//		display: inline-flex;
		//		content:'';
		//		width: 2.4rem;
		//		height: 2.4rem;
		//		background-repeat: no-repeat;
		//		background-size: contain;
		//		background-position: center;
		//	}
		//	&::after {
		//		display: none;
		//	}
		//}
	}


	&.text {
		//text버튼은 높이와 좌우 padding값이 달라 재정의 함
		--krds-btn-height-xsmall: 2rem;
		--krds-btn-padding-x-xsmall: 0.2rem;
		--krds-btn-height-small: 2.4rem;
		--krds-btn-padding-x-small: 0.2rem;
		--krds-btn-height-medium: 3.2rem;
		--krds-btn-padding-x-medium: 0.2rem;
		--krds-btn-height-large: 4rem;
		--krds-btn-padding-x-large: 0.2rem;
		--krds-btn-height-xlarge: 4.8rem;
		--krds-btn-padding-x-xlarge: 0.2rem;

		&[class *= ico-] {
			&::after {
				background-position: center;
			}
		}
		&:hover {
			background-color: transparent;

		}
		&.link { //링크이면서 텍스트사이에 있는경우 높이값 초기화
			height: auto;
			color: var(--#{$prefix}link-color-default);
			.svg-icon {
				background-color: var(--#{$prefix}link-color-default);
			}
			&:hover {
				color: var(--#{$prefix}link-color-hover);
				.svg-icon {
					background-color: var(--#{$prefix}link-color-hover);
				}
			}
			&:active,
			&:focus {
				color: var(--#{$prefix}link-color-pressed);
				.svg-icon {
					background-color: var(--#{$prefix}link-color-pressed);
				}
			}
			&:visited {
				color: var(--#{$prefix}link-color-visited);
				.svg-icon {
					background-color: var(--#{$prefix}link-color-visited);
				}
			}

		}

		//class명 검토
		&.ico-filter {
			position: relative;
			.num {
				display: inline-flex;
				position: absolute;
				right: 0.1rem;
				z-index: 1;
				height: 2rem;
				font-size: var(--#{$prefix}fz-label-sm);
				color: var(--#{$prefix}white);
				padding: 0 var(--#{$prefix}spacer-2);
				margin-top: -3rem;
				border-radius: 2rem;
				background-color: var(--#{$prefix}primary);
			}
		}
		&.h-auto {
			height: auto;
			padding: var(--#{$prefix}spacer-default2) !important;
		}
	}

	// * icon 버튼 변수처리 *
	$icon-btns-size: (
		xsmall: map-get($spacings-size-height, 16), //xsm
		small: map-get($spacings-size-height, 20), //sm
		medium: map-get($spacings-size-height, 24), //sm-m, md
		large: map-get($spacings-size-height, 32), //sm-l
		xlarge: map-get($spacings-size-height, 40), //no class default size
	) !default;

	/* icon 버튼 (텍스트 없음) */
	&.icon {
		@each $size, $value in $icon-btns-size {
			--#{$prefix}btn-icon-#{$size}: #{$value};
			&.#{$size} {
				@include foursquare(var(--#{$prefix}btn-icon-#{$size}));
				//icon size
				.svg-icon {
					@include foursquare(100%);
				}
			}
		}
		//기본 세팅
		@include foursquare(var(--#{$prefix}btn-icon-medium));
		padding: 0 !important;
		@include btn-reset;
		&:focus {
			@include focus($offset: .4rem);
		}
		.svg-icon {
			background-color: var(--#{$prefix}text-default);
		}
		//새로고침, 토글 등 보더 아이콘 버튼 형태
		&.border {
			background-color: var(--#{$prefix}gray-0);
			border: 0.1rem solid var(--#{$prefix}gray-40);
			border-radius: var(--#{$prefix}radius-max);

			//icon size 1.6rem
			&.large {
				.svg-icon {
					@include foursquare(var(--#{$prefix}icon-size-xsmall));
				}
			}
			&.xlarge {
				.svg-icon {
					@include foursquare(var(--#{$prefix}icon-size-xlarge));
				}
			}
			&[disabled],
			&.disabled {
				background-color: var(--#{$prefix}secondary-5);
			}
		}
	}
}

//추후삭제
/* **** button : only icon **** */
.btn-ico {
	padding: 0 !important;
	@include btn-reset;
	&:focus {
		@include focus($offset: .4rem);
	}
	&[class *= ico-] {
		width: 4rem;
		height: 4rem;
		background-repeat: no-repeat;
		background-size: contain;
		background-position: center;
		&::after {
			display: none;
		}
		&.md {
			width: 2.4rem;
			height: 2.4rem;
		}
		&.sm {
			width: 2rem;
			height: 2rem;
		}
		&.sm-m {
			width: 2.4rem;
			height: 2.4rem;
		}
        &.sm-l {
			width: 3.2rem;
			height: 3.2rem;
		}
		&.xsm {
			width: 1.6rem;
			height: 1.6rem;
		}
	}
	&.ico-sch {
        background-image: url(#{$url}/component/common/ico_sch_40.svg);
    }
	&.ico-info {
		background-image: url(#{$url}/pattern/common/ico_info.svg);
		&.sm {
			background-position: center;
			background-size: 1.6rem;
		}
	}
    &.ico-refresh {
        border-radius: 10rem;
        border: .1rem solid var(--#{$prefix}gray-40);
        background-color: var(--#{$prefix}white);
        background-image: url(#{$url}/component/common/ico_refresh_16.svg);
        background-size: 1.6rem;
    }
	&.ico-toggle-r {
        border-radius: 10rem;
        border: .1rem solid var(--#{$prefix}gray-40);
        background-color: var(--#{$prefix}white);
        background-image: url(#{$url}/component/common/ico_arr_16_down.svg);
        background-size: 1.6rem;
    }
	&.ico-pw-visible {
		background-image: url(#{$url}/component/common/ico_pw_visible.svg);
	}
	&.ico-help {
		background-image: url(#{$url}/component/common/ico_help_24.svg);
	}
	&.ico-page-prev {
		border-radius: 10rem;
        border: .1rem solid var(--#{$prefix}gray-40);
        background-color: var(--#{$prefix}white);
		background-image: url(#{$url}/component/common/ico_swiper_prev.svg);
		background-size: 2.4rem;
		&.disabled {
			background-color: var(--#{$prefix}secondary-5);
		}
	}
	&.ico-page-next {
		border-radius: 10rem;
        border: .1rem solid var(--#{$prefix}gray-40);
        background-color: var(--#{$prefix}white);
		background-image: url(#{$url}/component/common/ico_swiper_next.svg);
		background-size: 2.4rem;
		&.disabled {
			background-color: var(--#{$prefix}secondary-5);
		}
	}
}

//추후삭제
/* **** button : text button **** */
.btn-txt {
	padding: 0 var(--#{$prefix}spacer-default2) !important;
	@include btn-reset;
	&:hover {
		background-color: var(--#{$prefix}secondary-5);
	}
	&:active {
		background-color: var(--#{$prefix}secondary-10);
	}
	&:focus {
		@include focus($offset: .4rem);
	}
	&[disabled] {
		color:var(--#{$prefix}gray-50);
	}
	&[class *= ico-] {
		&::after {
			background-repeat: no-repeat;
			background-size: contain;
			background-position: center;
		}
		&.ico-before {
			&::before {
				display: inline-flex;
				content:'';
				background-repeat: no-repeat;
				background-size: contain;
				background-position: center;
			}
			&::after {
				display: none;
			}
		}
		&.ico-call {
			&::before {
				background-image: url(#{$url}/component/common/ico_call.svg);
			}
			&::after {
				background-image: url(#{$url}/component/common/ico_call.svg);
			}
		}
		&.ico-faq {
			&::before {
				background-image: url(#{$url}/component/common/ico_faq.svg);
			}
			&::after {
				background-image: url(#{$url}/component/common/ico_faq.svg);
			}
		}
	}
    &.underline {
        text-decoration: underline;
    }
	&.link { //링크이면서 텍스트사이에 있는경우 높이값 초기화
		height: auto;
		text-decoration: underline !important;
	}
	&.ico-like {
        &::before,
		&::after {
            background-image: url(#{$url}/component/common/ico_like_20.svg);
        }
    }
    &.ico-share {
		&::before,
        &::after {
            background-image: url(#{$url}/component/common/ico_share_20.svg);
        }
    }
    &.ico-arr {
        &::after {
            background-image: url(#{$url}/component/common/ico_arr_20_right.svg);
        }
    }
	&.ico-arr-down {
        &::after {
            background-image: url(#{$url}/component/common/ico_arr_16_down.svg);
        }
    }
	&.ico-more {
        &::after {
            background-image: url(#{$url}/component/common/ico_arr1_20_right.svg);
        }
    }
	&.ico-sch {
		&::before,
        &::after {
            background-image: url(#{$url}/component/common/ico_sch_40.svg);
        }
    }
	&.ico-sch1 {
		&::before,
        &::after {
            background-image: url(#{$url}/component/common/ico_sch1_20.svg);
        }
    }
	&.ico-go {
		&::before,
        &::after {
			background-image: url(#{$url}/component/common/ico_go_20.svg);
        }
    }
	&.ico-down {
		&::before,
        &::after {
			background-image: url(#{$url}/component/common/ico_file_20.svg);
        }
    }
    &.ico-filter {
        position: relative;
		&::before,
        &::after {
			background-image: url(#{$url}/component/common/ico_filter_20.svg);
        }
        .num {
            display: inline-flex;
            position: absolute;
            right: 0.1rem;
            z-index: 1;
            height: 2rem;
            font-size: var(--#{$prefix}fz-label-sm);
            color: var(--#{$prefix}white);
            padding: 0 var(--#{$prefix}spacer-2);
            margin-top: -3rem;
            border-radius: 2rem;
            background-color: var(--#{$prefix}primary);
        }
    }
	&.ico-reset {
		&::before,
        &::after {
			background-image: url(#{$url}/component/common/ico_refresh_16.svg);
        }
    }
	&.ico-log {
		&::before,
        &::after {
			background-image: url(#{$url}/component/common/ico_login_20.svg);
        }
    }
	&.ico-func {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_arr_func_20.svg);
		}
	}
	&.ico-logout {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_logout_16.svg);
		}
	}
	&.ico-email {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_email_20.svg);
		}
	}
	&.ico-print {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_print_20.svg);
		}
	}
	&.ico-scrap {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_scrap_20.svg);
		}
	}
	&.ico-del {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_del1_20.svg);
		}
	}
	&.ico-plus {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_plus_24.svg);
		}
	}
	&.ico-setting {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_setting_20.svg);
		}
	}
	&.ico-link {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_link_16.svg);
		}
	}
	&.ico-comment {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico_comment_16.svg);
		}
	}
	&.ico-prev {
		gap: var(--#{$prefix}spacer-2);
		&::before,
		&::after {
			background-image: url(#{$url}/component/common/ico-prev_24.svg);
		}
	}
	&.sm {
		&[class *= ico-] {
			&::before,
			&::after {
				width: 2rem;
				height: 2rem;
			}
		}
	}
	&.xsm {
		&[class *= ico-] {
			gap: var(--#{$prefix}spacer-default2);
			&::before,
			&::after {
				width: 1.6rem;
				height: 1.6rem;
			}
		}
	}
    &.h-auto {
        height: auto;
        padding: var(--#{$prefix}spacer-default2) !important;
    }
}
//텍스트 사이에 링크만 삽입되는 경우
.link-txt {
	text-decoration: underline;
}



/* **** button : chips **** */
// 배경색이 있는 타입
.btn-chip-fill {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	background-color: var(--#{$prefix}gray-10);
	&:hover {
		background-color: var(--#{$prefix}secondary-5);
	}
	&:active {
		background-color: var(--#{$prefix}secondary-10);
	}
	&[disabled],
	&.disabled {
		background-color: var(--#{$prefix}gray-30);
	}
}

//외곽 라인이 있는 타입
.btn-chip-outline {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	flex-shrink: 0;
	gap:.2rem;
	background-color: var(--#{$prefix}white);	
	border : .1rem solid var(--#{$prefix}gray-40);
	&:hover {
		background-color: var(--#{$prefix}secondary-5);
	}
	&:active {
		background-color: var(--#{$prefix}secondary-10);
	}
	&:disabled,
	&.disabled  {
		background-color: var(--#{$prefix}gray-30);
	}
	
}

/* **** button area **** */
.btn-wrap {
	width: 100%;
}


//responsive mobile
@include mobile { 
	.btn-ico {
		&[class*=ico-] {
			width: 2.4rem;
			height: 2.4rem;
		}
	}
}